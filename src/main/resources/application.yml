spring:
  application:
    name: hhplus
  profiles:
    active: local
  datasource:
    name: HangHaePlusDataSource
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 16
      connection-timeout: 10000
      max-lifetime: 1800000
    driver-class-name: com.mysql.cj.jdbc.Driver
  redisson:
    address: redis://localhost:6379
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        acks: all
        enable.idempotence: true
        min.insync.replicas: 1
        retries: 3      # 실패 시 재시도
    admin:
      auto-create: true
      fail-fast: false
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: false
      group-id: default-group
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

        fetch.min.bytes: 50000           # 최소 50KB 이상일 때 가져옴
        fetch.max.bytes: 52428800        # 최대 50MB까지 가져옴
        fetch.max.wait.ms: 500           # 데이터 없을 때 최대 500ms 대기
        max.poll.records: 1000           # 한 번에 최대 1000건 처리
        heartbeat.interval.ms: 3000      # 3초마다 브로커에 생존 알림
        session.timeout.ms: 10000        # 10초 동안 응답 없으면 죽은 것으로 간주
        request.timeout.ms: 30000        # 네트워크 요청 타임아웃 30초
        max.poll.interval.ms: 300000     # poll 간 최대 간격 5분
    listener:
      ack-mode: manual                 # 수동 커밋
      concurrency: 3

  data:
    redis:
      port: 6379
      host: localhost

  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: true
    hibernate:
      format_sql: true
      ddl-auto: create-drop
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC

  logging:
    level:
      org.hibernate.SQL: DEBUG
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  docker:
    compose:
      file:
        - ./docker/docker-compose.yml
        - ./docker/docker-compose-kafka.yml
      services:
        - mysql
        - redis
        - kafka

logging:
  level:
    org:
      springframework:
        cache: DEBUG
      data:
        redis: DEBUG
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql: TRACE

---
spring.config.activate.on-profile: local, test

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
  jpa:
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQLDialect

  redisson:
    address: redis://localhost:6379

  data:
    redis:
      port: 6379
      host: localhost


springdoc:
  api-docs:
    path: /v1
  swagger-ui:
    path: /swagger-ui.html
  packages-to-scan: kr.hhplus.be.server

